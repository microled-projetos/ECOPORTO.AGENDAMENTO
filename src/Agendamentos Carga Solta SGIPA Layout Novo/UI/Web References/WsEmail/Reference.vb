'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace WsEmail
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="BasicHttpBinding_IEmail", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Email
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private EnviarEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CancelarEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.AgendamentoCargaSoltaSGIPA.My.MySettings.Default.AgendamentoCargaSoltaSGIPA_WsEmail_Email
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event EnviarEmailCompleted As EnviarEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarEmailCompleted As ConsultarEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event CancelarEmailCompleted As CancelarEmailCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEmail/EnviarEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EnviarEmail(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal aplicacao As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal senha As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal emailDe As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://schemas.microsoft.com/2003/10/Serialization/Arrays")> ByVal emailPara() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://schemas.microsoft.com/2003/10/Serialization/Arrays")> ByVal emailCC() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://schemas.microsoft.com/2003/10/Serialization/Arrays")> ByVal emailCCO() As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal assuntoEmail As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal corpoEmail As String, ByVal isBodyHtml As Boolean, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal isBodyHtmlSpecified As Boolean, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://schemas.microsoft.com/2003/10/Serialization/Arrays")> ByVal anexos() As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal bodyEncoding As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://schemas.microsoft.com/2003/10/Serialization/Arrays")> ByVal emailRetornoErro() As String) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("EnviarEmail", New Object() {aplicacao, senha, emailDe, emailPara, emailCC, emailCCO, assuntoEmail, corpoEmail, isBodyHtml, isBodyHtmlSpecified, anexos, bodyEncoding, emailRetornoErro})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EnviarEmailAsync(ByVal aplicacao As String, ByVal senha As String, ByVal emailDe As String, ByVal emailPara() As String, ByVal emailCC() As String, ByVal emailCCO() As String, ByVal assuntoEmail As String, ByVal corpoEmail As String, ByVal isBodyHtml As Boolean, ByVal isBodyHtmlSpecified As Boolean, ByVal anexos() As String, ByVal bodyEncoding As String, ByVal emailRetornoErro() As String)
            Me.EnviarEmailAsync(aplicacao, senha, emailDe, emailPara, emailCC, emailCCO, assuntoEmail, corpoEmail, isBodyHtml, isBodyHtmlSpecified, anexos, bodyEncoding, emailRetornoErro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EnviarEmailAsync(ByVal aplicacao As String, ByVal senha As String, ByVal emailDe As String, ByVal emailPara() As String, ByVal emailCC() As String, ByVal emailCCO() As String, ByVal assuntoEmail As String, ByVal corpoEmail As String, ByVal isBodyHtml As Boolean, ByVal isBodyHtmlSpecified As Boolean, ByVal anexos() As String, ByVal bodyEncoding As String, ByVal emailRetornoErro() As String, ByVal userState As Object)
            If (Me.EnviarEmailOperationCompleted Is Nothing) Then
                Me.EnviarEmailOperationCompleted = AddressOf Me.OnEnviarEmailOperationCompleted
            End If
            Me.InvokeAsync("EnviarEmail", New Object() {aplicacao, senha, emailDe, emailPara, emailCC, emailCCO, assuntoEmail, corpoEmail, isBodyHtml, isBodyHtmlSpecified, anexos, bodyEncoding, emailRetornoErro}, Me.EnviarEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnEnviarEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.EnviarEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EnviarEmailCompleted(Me, New EnviarEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEmail/ConsultarEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarEmail(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal aplicacao As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal senha As String, ByVal protocolo As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal protocoloSpecified As Boolean) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("ConsultarEmail", New Object() {aplicacao, senha, protocolo, protocoloSpecified})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarEmailAsync(ByVal aplicacao As String, ByVal senha As String, ByVal protocolo As Integer, ByVal protocoloSpecified As Boolean)
            Me.ConsultarEmailAsync(aplicacao, senha, protocolo, protocoloSpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarEmailAsync(ByVal aplicacao As String, ByVal senha As String, ByVal protocolo As Integer, ByVal protocoloSpecified As Boolean, ByVal userState As Object)
            If (Me.ConsultarEmailOperationCompleted Is Nothing) Then
                Me.ConsultarEmailOperationCompleted = AddressOf Me.OnConsultarEmailOperationCompleted
            End If
            Me.InvokeAsync("ConsultarEmail", New Object() {aplicacao, senha, protocolo, protocoloSpecified}, Me.ConsultarEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarEmailCompleted(Me, New ConsultarEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IEmail/CancelarEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CancelarEmail(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal aplicacao As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal senha As String, ByVal protocolo As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal protocoloSpecified As Boolean) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> String
            Dim results() As Object = Me.Invoke("CancelarEmail", New Object() {aplicacao, senha, protocolo, protocoloSpecified})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CancelarEmailAsync(ByVal aplicacao As String, ByVal senha As String, ByVal protocolo As Integer, ByVal protocoloSpecified As Boolean)
            Me.CancelarEmailAsync(aplicacao, senha, protocolo, protocoloSpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CancelarEmailAsync(ByVal aplicacao As String, ByVal senha As String, ByVal protocolo As Integer, ByVal protocoloSpecified As Boolean, ByVal userState As Object)
            If (Me.CancelarEmailOperationCompleted Is Nothing) Then
                Me.CancelarEmailOperationCompleted = AddressOf Me.OnCancelarEmailOperationCompleted
            End If
            Me.InvokeAsync("CancelarEmail", New Object() {aplicacao, senha, protocolo, protocoloSpecified}, Me.CancelarEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnCancelarEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.CancelarEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CancelarEmailCompleted(Me, New CancelarEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EnviarEmailCompletedEventHandler(ByVal sender As Object, ByVal e As EnviarEmailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EnviarEmailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarEmailCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarEmailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarEmailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CancelarEmailCompletedEventHandler(ByVal sender As Object, ByVal e As CancelarEmailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CancelarEmailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
